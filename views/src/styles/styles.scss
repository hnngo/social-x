$theme-colors: (
  "main": #00CBF5,
  "lightMain": rgba(0, 204, 245, 0.164),
  "darkMain": rgb(0, 213, 255),
  "shadowMain": rgb(88, 160, 174),
  "dangerText": rgb(216, 75, 75)
);

$breakpoints: (
    "phone":        576px,
    "tablet":       768px,
    "tablet-wide":  992px,
    "desktop":      1200px,
    "desktop-wide": 1440px
);

// Normal fonts
@mixin fonts($type: treb) {
  @if $type == lucida {
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  } @else if $type == courier {
    font-family: 'Courier New', Courier, monospace;
  } @else {
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  }
}

// Mixin for styling text
@mixin pStyle($fontType: treb, $fontSize: 16px, $fontColor: "black", $letterSpacing: 0px) {
  @include fonts($fontType);
  
  font-size: $fontSize;
  letter-spacing: $letterSpacing;

  @if map-has-key($map: $theme-colors, $key: $fontColor) {
    $fontColor: map-get($map: $theme-colors, $key: $fontColor);
  }

  color: $fontColor;
}

// Media querries
@mixin mq($width, $type: min) {
  @if map-has-key($map: $breakpoints, $key: $width){
    $width: map-get($map: $breakpoints, $key: $width);
    @if $type == max {
      $width: $width - 1px;
      @media only screen and (max-width: $width) {
        @content;
      }
    } @else {
      @media only screen and (min-width: $width) {
        @content;
      }
    }
  }
};

body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Nav bar
.nav-container {
  width: 100vw;
  height: 60px;
  position: absolute;
  z-index: 2;

  .nav-response {
    max-width: 1200px;
    padding: 0 20px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    color: white;

    .nav-brand p {
      @include pStyle(courier, 40px, main, 0px);
      margin-top: 3px;
      padding: 5px 0;
      font-weight: bold;
      transition: 1s;

      @include mq("phone", max) {
        font-size: 30px;
        letter-spacing: -2px;
      }
    }

    .nav-link ul {
      padding: 8px 0;
      margin: 0;
      list-style: none;

      li {
        @include pStyle(lucida, 20px, "white", 0px);
        position: relative;
        display: inline;
        margin: 0 15px;
        cursor: pointer;

        &::after {
          content: "";
          position: absolute;
          bottom: -7px;
          left: 0px;
          width: 0px;
          height: 3px;
          background-color: map-get($map: $theme-colors, $key: main);
          transition: 0.5s;
        }

        &:hover {
          color: map-get($map: $theme-colors, $key: "main");

          &::after {
            width: 100%;
          }
        }
      }
    }

    .nav-small-container {
      i {
        cursor: pointer;
        font-size: 32px;
        color: map-get($map: $theme-colors, $key: main);
        padding: 10px 10px;
      }

      @keyframes slideDown {
        from {
          height: 0px;
        }

        to {
          height: 40px * 2;
        }
      }

      &:hover .nav-small-btn {
        animation: slideDown 0.5s ease-in-out forwards;
      }

      .nav-small-btn {
        position: absolute;
        top: 60px;   // Width of nav height
        left: 0px;
        height: 0px;
        overflow: hidden;

        div {
          height: 40px;
          width: 100vw;
          text-align: center;
          background-color: rgba(0, 204, 245, 0.167);
          border-bottom: 1px solid map-get($map: $theme-colors, $key: main);
          transition: 0.6s;

          p {
            @include pStyle(treb, 18px, main, 1px);
            padding: 5px 0;
            margin: 0;
            font-weight: bold;
          }
        }
      }
    }
  }

  .nav-sin-form {
    position: absolute;
    width: 100vw;
    height: 100vh;
    top: 60px;
    left: 0px;
  }
}

.hp-container {
  .hp-img-container img {
    height: 100vh;
    width: 100%;
    resize: both;
    filter: brightness(40%);
  }

  .hp-content {
    width: 80%;
    position: absolute;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;

    p.main-header {
      @include pStyle(treb, 50px, white, 0px);
      margin-bottom: 30px;

      @include mq("phone", max) {
        font-size: 32px;
      }
    }

    p.second-header {
      @include pStyle(treb, 22px, white, 5px);
      margin-bottom: 40px;

      @include mq("phone", max) {
        font-size: 18px;
      }
    }

    .btn-group button {
      @include pStyle(treb, 16px, white, 0px);
      cursor: pointer;
      border-radius: 20px;
      padding: 5px 25px;
      border: 2px map-get($map: $theme-colors, $key: main) solid;
      box-shadow: 0px 0px 4px 0px map-get($map: $theme-colors, $key: shadowMain);
      outline: none;

      @include mq("phone", min) {
        &:hover {
          box-shadow: 0px 0px 13px 0px map-get($map: $theme-colors, $key: shadowMain);
        }
      }

      &:active {
        box-shadow: inset 0px 0px 13px 0px map-get($map: $theme-colors, $key: shadowMain)
      }
  
      &.explore {
        margin-right: 10px;
        background: none;
        color: map-get($map: $theme-colors, $key: main);
      }
  
      &.seemore {
        background: map-get($map: $theme-colors, $key: main);
        color: white;
      }
    }
  }
}

.sin-form-container {
  position: absolute;
  top: 40%;
  left: 50%;
  width: 400px;
  transform: translate(-50%, -50%);
  border: 2px map-get($map: $theme-colors, $key: main) solid;
  border-radius: 20px;
  background-color: rgba(0, 0, 0, 0.863);
  box-shadow: 0px 0px 33px 1px map-get($map: $theme-colors, $key: shadowMain);

  p {
    @include pStyle(treb, 35px, "main", 2px);
    text-align: center;
    margin: 0px;
    padding: 20px 0;
  }

  form {
    padding: 0px 30px;
    color: white;

    .input-field {
      position: relative;

      i {
        position: absolute;
        top: 21px;
        left: 13px;
        font-size: 32px;
        color: map-get($map: $theme-colors, $key: main);
      }

      input {
        @include pStyle(treb, 20px, black, 0px);
        margin: 10px 0px;
        background: white;
        border-radius: 20px;
        width: 100%;
        padding: 10px 0px;
        padding-left: 55px;
        border: 2px map-get($map: $theme-colors, $key: main) solid;

        &::placeholder {
          @include pStyle(treb, 20px, rgb(202, 202, 202), 2px);
        }
      }

      .error-text {
        @include pStyle(treb, 16px, dangerText, 1px);
        padding-left: 5px;
        margin: 0;
      }
    }

    button,
    .google-btn {
      @include pStyle(treb, 18px, white, 2px);
      outline: none;
      margin: 10px 0;
      width: 100%;
      border-radius: 20px;
      border: none;
      height: 45px;
      background-color: map-get($map: $theme-colors, $key: main);
    }

    button {
      margin-top: 40px;
    }

    .google-btn {
      text-align: center;
      padding: 8px 0;
      background-color: map-get($map: $theme-colors, $key: dangerText);
    }

    .sin-sup-switch {
      @include pStyle(treb, 14px, white, 2px);
      margin: 20px 0;
      cursor: pointer;
      text-align: center;
    }
  }
}


